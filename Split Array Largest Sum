class Solution {
    //Function to split array into K subsets with equal sum.
     splitArray(arr, N, K) {
        let totalSum = 0;
        let max = Number.MIN_SAFE_INTEGER;

        for (let a of arr) {
            totalSum += a;
            max = Math.max(max, a);
        }

        let lo = max;
        let hi = totalSum;
        let ans = Number.MAX_SAFE_INTEGER;

        while (lo <= hi) {
            let mid = lo + Math.floor((hi - lo) / 2);
            if (this.isValid(arr, mid, K)) {
                ans = Math.min(ans, mid);
                hi = mid - 1; // To minimize our answer
            } else {
                lo = mid + 1; // To get Valid Range
            }
        }
        return ans;
    }

    // Function to check if requiredSum is possible to get by splitting array in K or fewer subarrays.
    isValid(arr, requiredSum, k) {
        let sum = 0;
        let count = 1;

        for (let a of arr) {
            if (sum + a <= requiredSum) {
                sum += a;
            } else {
                sum = a;
                count++;
            }
        }
        return count <= k;
    }
}
